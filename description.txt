Релационные базы данных 
	- реляционная база данных это таблица данных, состоит из колонок и строк, данные связанные между собой.
	- таблицы могут ссылаться друг на друга

CREATE TABLE
	- создаёт таблицу 
	CREATE TABLE tableName
		- пишим название таблицы
	CREATE TABLE tableName (
		one		INTEGER,
		name 	VARCHAR,
		year	SMALLINT,
		comment	VARCHAR
	);
		- указываем колонки и типы данных
ТИПЫ ДАННЫХ
	Целочисленные
		SMALLINT	-32768 to +32767	2 байта на число
		INTEGER		-2e09 to 2e09 		4 байт 
		BIGINT		-9e18 to 9e18		8 байт
	Дробые числа, неточные 
		DOUBLE PRECISION
		REAL
	Дробные числа, точные
		DECIMAL(p, s) / NUMERIC(p, s)
	Символьные
		CHAR(n), CHARACTER(n)				- фиксированная длинна
		VARCHAR(n), CHARACTER VARYING(n)	- переменная длинна в скобках можно указать максимальное значение длинны
		TEXT
	Дата, Время, Дата+Время
		DATE,						- дата
		TIME,						- время
		TIMESTAMP,					- дата + время
		TIMESTAMP WITH TIME ZONE	- дата + время + часовой пояс
			- по умолчаию TIME + TIMESTAMP содержит время без часового пояса
PRIMARY KEY - уникальная колонка не должна содержать null
	INTEGER NOT NULL
		PRIMARY KEY
FOREIGN KEY - Внешний ключ, ссылается на первичный ключ в другой таблице
	INTEGER REFERENCES tableName(idName)

Один ко многим 
	- одной строке первой таблицы может соответствовать несколько строк второй таблицы, и наоборот во второй таблице несколько  записей может соответствовать одной записи в первой

Многие к одному 
	- тоже самое что один ко многим зеркально

Один ко одному 
	- одна строка может соответствовать одной строке в другой 

многие ко многим 
	- много строк соответствуют одной таблицы соотвествуют многим в другой

--
	комментарии

-----------------------------------------   ФИЛЬТРАЦИЯ КОЛОНОК

SELECT
	- выбор колонок
	* 
		- выбираем все колонки из таблицы
	one, two, three
		- перечесляем все колонки которые должны вернуться от запроса
	WHERE
		- фильтрация строк
		WHERE name (+ условие)
	LIMIT
		- указываем количество строк
		LIMIT 10
	OR
		- или
		WHERE name OR surname

		WHERE 	name 
			OR	one
			OR	two
			OR	three
		- множественный выбор OR
	AND 
		- и, выше приоритет над OR 
		WHERE name AND surname

		WHERE 	name 
			AND name <> one 
			AND name <> two
			AND name <> three
		- множественное не 

	IN
		- множественный выбор
		WHERE name IN (one, two, threes)

		SELECT 	one, two, three
		FROM 	table_name
		WHERE 	one IN (
			SELECT 	one
			FROM 	table_name_two
		)
		- подзапрос 

		SELECT 	*
		FROM	
			(
			SELECT one, two
			FROM table_name_1
			WHERE three > 2000
			) as table_name_2 - тут мы возвращем значения в Селект в запрос выше давая Алис table_name_2
		WHERE
			table_name_2.one between 10 and 20
	NOT IN 
		- множественное НЕ 
		WHERE name NOT IN (one, two, three)
	BETWEEN
		- между
		WHERE one BETWEEN 1000 and 1500
	NOT
		- не равно
		WHERE (one = 2) == WHERE one <> 2
	
	<>, !=
		- НЕ
		WHERE name ANMD surname <> ""
	< > = >= <= 
		- меньше, больше, равно, больше-равно, меньше-равно
	()
		- выбираем приоритет выполнения 
		SELECT 	*
		FROM	table_name
		WHERE	row_id = 303
		OR	(row_id = 100 AND year < 2000)

-----------------------------------------   ФИЛЬТРАЦИЯ  СТРОК  

WHERE
	- фильтрация строк
LIMIT
	- лимит строк


-----------------------------------------   ФУНКЦИИ
	upper
		- верхний регистр
		WHERE upper(name)
	name as u_name 
		- Алиас колонки(переименовать)
	substring 
		- выбираем кусок строки
		WHERE substring(name, 1, 1)
			- по первой букве

-----------------------------------------   
-----------------------------------------   
-----------------------------------------   
-----------------------------------------   


























































































































































































































